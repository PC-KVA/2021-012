FUNCTION "DevInWork" : Void
{ S7_Optimized_Access := 'TRUE' }
VERSION : 0.1
   VAR_INPUT 
      ReqNumbWorkDev : DInt;
      ReadyDev : Array[*] of Bool;
      WorkDev : Array[*] of Bool;
   END_VAR

   VAR_OUTPUT 
      DevCm : Array[*] of Bool;
      ErrNotSameBound : Bool;
   END_VAR

   VAR_TEMP 
      tLBound : DInt;
      tUBound : DInt;
      tReqNumbWorkDev : DInt;
      i : DInt;
      tReadyDev : DInt;
      tWorkDev : DInt;
      tElemetsInArray : DInt;
   END_VAR


BEGIN
	REGION Check bounds of arrays
	    #tLBound := LOWER_BOUND(ARR := #ReadyDev, DIM := 1);
	    IF #tLBound <> LOWER_BOUND(ARR := #WorkDev, DIM := 1)
	        AND
	        #tLBound <> LOWER_BOUND(ARR := #DevCm, DIM := 1) THEN
	        #ErrNotSameBound := TRUE;
	    END_IF;
	    #tUBound := UPPER_BOUND(ARR := #ReadyDev, DIM := 1);
	    IF #tUBound <> UPPER_BOUND(ARR := #WorkDev, DIM := 1)
	        AND
	        #tUBound <> UPPER_BOUND(ARR := #DevCm, DIM := 1) THEN
	        #ErrNotSameBound := TRUE;
	    END_IF;
	    //Get count of elemets
	    FOR #i := #tLBound TO #tUBound DO
	        #tElemetsInArray += 1;
	    END_FOR;
	    
	END_REGION
	REGION Check #ReqNumbWorkDev
	    #tReqNumbWorkDev := #ReqNumbWorkDev;
	    IF #tReqNumbWorkDev < 0 THEN
	        #tReqNumbWorkDev := 0;
	    END_IF;
	    IF #tReqNumbWorkDev > #tElemetsInArray THEN
	        #tReqNumbWorkDev := #tElemetsInArray;
	    END_IF;
	END_REGION
	REGION Count ready device
	    FOR #i := #tLBound TO #tUBound DO
	        IF #ReadyDev[#i] THEN
	            #tReadyDev += 1;
	        END_IF;
	    END_FOR;
	END_REGION
	REGION Count work device
	    FOR #i := #tLBound TO #tUBound DO
	        IF #WorkDev[#i] THEN
	            #tWorkDev += 1;
	        END_IF;
	    END_FOR;
	END_REGION
	REGION Set device command
	    IF #tReqNumbWorkDev <> #tWorkDev THEN
	        FOR #i := #tLBound TO #tUBound DO
	            IF #ReadyDev[#i] THEN
	                IF #tReqNumbWorkDev > 0 THEN
	                    #DevCm[#i] := TRUE;
	                    #tReqNumbWorkDev -= 1;
	                ELSE
	                    #DevCm[#i] := FALSE;
	                END_IF;
	            ELSE
	                #DevCm[#i] := FALSE;
	            END_IF;
	        END_FOR;
	    END_IF;
	    //If bounds not same
	    IF #ErrNotSameBound THEN
	        FOR #i := #tLBound TO #tUBound DO
	            #DevCm[#i] := FALSE;
	        END_FOR;
	    END_IF;
	
	END_REGION
	
	
	
	
END_FUNCTION

